.model small
.data

arr db 10h,20h,30h,40h,50h,60h,70h,80h,90h
len equ ($-arr)

msg1 db "The second maximum is $"

.code
mov ax, @data
mov ds, ax

xor ax, ax          ; flush ax
; ah will store max
; al will store second max

; assume first num is max
mov ah, arr[0]
; assume second num is second max
mov al, arr[1]

; use cl as iteration variable
mov cl, 00h
; iterate over array
iter:
lea bx, arr + 2     ; load address of third number in array 
add bl, cl          ; add offet to get to clth number

; if current number > max
; then max = current number
cmp [bx], ah
jg smax
max:
; second max = max
mov al, ah
; max = current num
mov ah, [bx]

smax:
; if current num < second max
; second max = current num
cmp [bx], al
jl bottom

mov al, [bx]

bottom:
inc cl
; if cl < len
; then repeat the loop
cmp cl, len
jle iter

; put second max in dl
mov dl, al
; display contents of dl
call showdl

; exit
mov ah, 4ch
int 21h

showdl proc
; make copy of dl
mov dh, dl

; put upper nibble into lower nibble
ror dl, 04h
; mask upper nibble
and dl, 0fh
; number to ascii
add dl, '0'

; print dl
mov ah, 02h
int 21h

; restore the copy
mov dl, dh
; mask upper nibble
and dl, 0fh
; number to ascii
add dl, '0'

; print dl
mov ah, 02h
int 21h

ret
showdl endp
end
